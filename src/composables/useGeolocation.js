// src/composables/useGeolocation.js

import { useNotification } from './useNotification'

export function useGeolocation() {
  const defaultCoords = [44.943376, 34.098043] // –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å
  const { showNotification } = useNotification()

  const getUserCoords = (options) => {
    return new Promise((resolve, reject) => {
      if (!navigator.geolocation) {
        showNotification('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä–æ–º', 'warning')
        reject(new Error('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä–æ–º'))
        return
      }

      navigator.geolocation.getCurrentPosition(
        resolve,
        (error) => {
          let errorMessage
          switch (error.code) {
            case error.PERMISSION_DENIED:
              errorMessage = '–î–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
              break
            case error.POSITION_UNAVAILABLE:
              errorMessage = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'
              break
            case error.TIMEOUT:
              errorMessage = '–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏—Å—Ç–µ–∫–ª–æ'
              break
            default:
              errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏'
          }
          showNotification(errorMessage, 'warning')
          reject(new Error(errorMessage))
        },
        options,
      )
    })
  }

  const getYandexRouteLink = (currentCoords, points) => {
    const ll = `${currentCoords[1]},${currentCoords[0]}`
    const rtext =
      `${currentCoords[0]},${currentCoords[1]}~` +
      points.map((pt) => `${pt.coords[0]},${pt.coords[1]}`).join('~')
    return `https://yandex.ru/maps/146/simferopol/?ll=${ll}&mode=routes&rtext=${rtext}&rtt=mt&ruri=~~&z=13.6`
  }

  const openYandexRoute = async (trip) => {
    let currentCoords = defaultCoords

    try {
      currentCoords = await getUserCoords({
        enableHighAccuracy: true,
        timeout: 5000,
        maximumAge: 0,
      })
    } catch (e) {
      showNotification(`–û—à–∏–±–∫–∞: ${e.message}. –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Ü–µ–Ω—Ç—Ä –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—è.`, 'warning')
      console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å):', currentCoords)
    }

    const url = getYandexRouteLink(currentCoords, trip.points)
    window.open(url, '_blank')
  }

  return {
    getUserCoords,
    getYandexRouteLink,
    openYandexRoute,
  }
}
